#!/bin/bash

quit () {
    echo quit
    exit
}

loaddata () {

export DB2_PORT=3306
export DB2_USER=konakart
export DB2_PASS=qrzt6hy7gh8901
#export DB2_HOST=107.170.56.125
export DB2_HOST=127.0.0.1
export DB2_NAME=konakart



#################
#   ingram_products.import_status
#   NULL - error ....
#   0 -   no changes
#   1 -  Added new product
#   2 -  Updated from PRICE.TXT
#   3 -  Updated from PRICE.TXT + Updated from TOTAL.TXT
#   4 -  Updated from TOTAL.TXT
#   5 -  Joined products to existing magento products
#

#  catalog_product_entity.is_imported
#  0 - Added manually
#  1 - Added automatically
#  2 - New update from etilize
#  3 - Updated by etilize
#  4 - New product
#  5 - New product + update from etilize


#  catalog_category_entity.is_imported
#  0 - Added manually
#  1 - Added automatically by Etilize
#  2 - New from etilize
#  3 - Updated by etilize
#  4 - Added automatically by IngramMicro
#  5 - New by IngramMicro
#  6 - Updated by by IngramMicro

# 8 New in process by Ingram
# 9 New in process by Etilize

#################
# Configurations:
#jk put back DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#jk put back WORK_PATH=$DIR/../

MYSQL="mysql --local-infile --show-warnings -u$DB2_USER -h$DB2_HOST -P $DB2_PORT -D$DB2_NAME "
if [  $DB2_PASS ];
then
MYSQL="$MYSQL  -p$DB2_PASS"
fi

echo MYSQL IS $MYSQL


#WORK_PATH=/var/www
#MYSQL='mysql  --show-warnings -umikaela -pepFuLVPZ -htunnel.pagodabox.com -P 3307 -Dshaniqua '
#WORK_PATH=/home/taras/Worktable/ramdisk/htdocs/
#MYSQL='mysql  --show-warnings  -u root -h 127.0.0.1 -P 13306 -Dmage_ng  '
WORK_PATH=/home/judy/workarea


DATA_PATH=$WORK_PATH/var
pid_file=$DATA_PATH/bitcoinstore.pid
ETILIZE_CSV=$DATA_PATH/etilize
ETILIZE_SQL=$WORK_PATH/shell/EtilizeSQL

ETILIZE_FTP_LOGIN="memorydealcsv"
ETILIZE_FTP_PASSWORD="M3moryD3@L"

INGRAM_FTP_LOGIN="HM76A3"
INGRAM_FTP_PASSWORD="2Ta2ma"
INGRAM_DATA_PATH=$DATA_PATH/ingram
INGRAM_BACKUP_PATH=$DATA_PATH/ingram.bak
INGRAM_SQL=$WORK_PATH/shell/IngramSQL
COMMON_SQL=$WORK_PATH/shell/CommonSQL



UNZIP=$DATA_PATH/unzip


###################
#  Parameters
###################
#Parameters
case "$1" in 
--all)
#####################
# Run all possible steps
#####################


STEP_1=1  # download Ingram prices ZIP and unpack it
STEP_2=1  # put Ingram PRICES.TXT to mySQL table   
STEP_3=1    # download Ingram stock file
STEP_4=1    #  put Ingram stock data to mySQL table
STEP_5=1    #   update product information from Ingram download

#STEP_5=1    # download Ingram Categories and put them to mysql table
STEP_6=1    # Upload Ingram Categories to Magento
STEP_7=1    #  download Ingram CPUs and put them to mysql table
STEP_8=1    #  - 
STEP_9=1    #  download Ingram Media and put it to mysql table 
STEP_10=1  # -
STEP_11=1  #  download Ingram Vendors and put them to mysql table
STEP_12=1  #  put Ingram vendors to Magento attribute
STEP_13_1=1 # Etilize Download
STEP_13_2=1 # Etilize Put to Database
STEP_13_3=1 # Etilize Reindex
STEP_14=1  #  Put Etilize categories to Magento
STEP_15=1  #  Ingram,Etilize products import/update to Magento
STEP_15_1=1  #  Ingram Price Update in Magento
STEP_15_2=1  #  Ingram Stock Update in Magento

STEP_16=1  #  Assign Ingram products to New Ingram categories
STEP_17=1  #  Assign New Ingram products to Ingram categories
STEP_18=1  #  Assign Magento products to Etilize system
STEP_18_1=1  #  Create Related products in Magento based on Etilize system
STEP_19=1  #  Update products attributes by Etilize
STEP_20=1  #  Assign products to New Etilize categories
STEP_21=1  #  Assign New Ingram products to Etilize categories
STEP_22=1  #  Assign New Ingram products to Ingram categories
STEP_23=1  # Update status of categories with products
STEP_24=1  #  reindex catalog_product_attribute
STEP_25=1  #  reindex catalog_product_price
STEP_26=1  #  reindex catalog_url
STEP_27=1  #  reindex catalog_product_flat
STEP_28=1  #  reindex catalog_category_flat
STEP_29=1  #  reindex catalog_category_product
STEP_30=1  #  reindex catalogsearch_fulltext
STEP_31=1  #  reindex cataloginventory_stock
STEP_32=1  #  reindex tag_summary
STEP_33=1  #  Sphinx Full Reindex
STEP_34=1  #  Sphinx Update Reindex
STEP_35=1  #  Sphinx Upload to search server
STEP_36=1 # Generate Datfeed file for brokerbin
STEP_37=1 # Send Datfeed file to brokerbin


;;
--daily)
echo "---- Daily ----"

echo "Download Ingrammicro data and put to database"
STEP_1=1    #   download Ingram prices ZIP and unpack it
STEP_2=1    #   put Ingram PRICES.TXT to mySQL table
STEP_3=1    #   download Ingram stock file
STEP_4=1    #   put Ingram stock data to mySQL table
STEP_5=1    #   update product information from Ingram download
# STEP_5=1    # download Ingram Categories and put them to mysql table
STEP_7=1    #  download Ingram CPUs and put them to mysql table
STEP_9=1    #  download Ingram Media and put it to mysql table 
STEP_11=1  #  download Ingram Vendors and put them to mysql table

echo "Update Ingramm Price and Stock"

STEP_15_1=1  #  Ingram Price Update in Magento
STEP_15_2=1  #  Ingram Stock Update in Magento
STEP_23=1  # Update status of categories with products



##STEP_24=1  #  reindex catalog_product_attribute
##STEP_25=1  #  reindex catalog_product_price
##STEP_31=1  #  reindex cataloginventory_stock
#STEP_24=1  #  reindex catalog_product_attribute
#STEP_25=1  #  reindex catalog_product_price
##STEP_26=1  #  reindex catalog_url
#STEP_27=1  #  reindex catalog_product_flat
#STEP_28=1  #  reindex catalog_category_flat
#STEP_29=1  #  reindex catalog_category_product
##STEP_30=1  #  reindex catalogsearch_fulltext
#STEP_31=1  #  reindex cataloginventory_stock
##STEP_32=1  #  reindex tag_summary


#STEP_33=1  #  Sphinx Full Reindex
#STEP_35=1  #  Sphinx Upload to search server

STEP_36=1 # Generate Datfeed file for brokerbin



;;
--weekly)
echo "Weekly"

STEP_1=0    # download Ingram prices ZIP and unpack it
STEP_2=1    # put Ingram PRICES.TXT to mySQL table
STEP_3=0    # download Ingram stock file
STEP_4=0    #  put Ingram stock data to mySQL table
STEP_5=0    #   update product information from Ingram download

#STEP_5=0    # download Ingram Categories and put them to mysql table
STEP_7=0    #  download Ingram CPUs and put them to mysql table
STEP_9=0    #  download Ingram Media and put it to mysql table 
STEP_11=0  #  download Ingram Vendors and put them to mysql table

;;


--download-ingramm)
echo "Download Ingrammicro data and put to database"
STEP_1=0  # download Ingram prices ZIP and unpack it
STEP_2=1  # put Ingram PRICES.TXT to mySQL table   
STEP_3=0    # download Ingram stock file
STEP_4=1    #  put Ingram stock data to mySQL table
STEP_5=1    #   update product information from Ingram download

#STEP_5=0    # download Ingram Categories and put them to mysql table

STEP_7=0    #  download Ingram CPUs and put them to mysql table
STEP_9=0    #  download Ingram Media and put it to mysql table 
STEP_11=0  #  download Ingram Vendors and put them to mysql table

;;

--append-ingramm)
echo "Download Ingrammicro data and put to database"
STEP_2=1  # put Ingram PRICES.TXT to mySQL table   
STEP_4=1    #  put Ingram stock data to mySQL table
;;

--update-ingramm-prices)
echo "Price and Stock"
STEP_15_1=0  #  Ingram Price Update in Magento
STEP_23=0  # Update status of categories with products
STEP_24=0  #  reindex catalog_product_attribute
STEP_25=0  #  reindex catalog_product_price
STEP_31=0  #  reindex cataloginventory_stock

;;


--update_price_and_stock)
echo "Update Ingramm Price and Stock"
STEP_15_1=1  #  Ingram Price Update in Magento
STEP_15_2=1  #  Ingram Stock Update in Magento
STEP_23=1  # Update status of categories with products
STEP_24=1  #  reindex catalog_product_attribute
STEP_25=1  #  reindex catalog_product_price
STEP_31=1  #  reindex cataloginventory_stock

;;

--download-etilize)
echo "Download Etilize data and put to database"
STEP_13_1=1 # Etilize Download
STEP_13_2=1 # Etilize Put to Database
STEP_13_3=1 # Etilize Reindex
;;

--ingramm-other)
echo "Ingramm Other"
STEP_6=1    # Upload Ingram Categories to Magento
STEP_12=1  #  put Ingram vendors to Magento attribute
;;

--brokerbin-feed)
echo "Brokerbin feed"
STEP_36=1 # Generate Datfeed file for brokerbin
STEP_37=1 # Send Datfeed file to brokerbin

;;

--update-sphinx)
echo "Sphinx Update Reindex"
STEP_34=1  #  Sphinx Update Reindex

;;


--update-sphinx-all)
echo "Sphinx Update Reindex ALL"
STEP_33=1  #  Sphinx Update Reindex

;;




--reindex-all)
echo "Magento reindex all"

STEP_24=1  #  reindex catalog_product_attribute
STEP_25=1  #  reindex catalog_product_price
#STEP_26=1  #  reindex catalog_url
STEP_27=1  #  reindex catalog_product_flat
STEP_28=1  #  reindex catalog_category_flat
STEP_29=1  #  reindex catalog_category_product
STEP_30=1  #  reindex catalogsearch_fulltext
STEP_31=1  #  reindex cataloginventory_stock
STEP_32=1  #  reindex tag_summary



;;

--step)

eval "STEP_$2=1"

;;

*)
echo "Usage:
--daily      - Only Ingram price update
--weekly - update Etilize data and full Ingram
--update_price_and_stock 

--append-ingramm  - put Ingram PRICES.TXT to mySQL table and put Ingram stock data to mySQL table

--download-ingramm
--download-etilize

--help - this help"
exit
;;
esac



#############################################
#  Start
#############################################


if [ -f $pid_file ];
then
echo "Script is already running .."
exit
fi

echo -n $$ >$pid_file

#############################################
#  Ingram Price file
#############################################


#### Start Step 1 , download Ingram prices ZIP and unpack it ######


if [ $STEP_1 = "1" ] ; then
date
echo "----------Ingram download PRICES.TXT----------";
if [ -f $INGRAM_DATA_PATH/PRICE.ZIP ];
then
CURRENT_DATE=`date +%d%m%y-%H:%M:%S`
echo "Moving '$INGRAM_DATA_PATH/PRICE.ZIP' to '$INGRAM_BACKUP_PATH/PRICE.$CURRENT_DATE.ZIP'"
mv $INGRAM_DATA_PATH/PRICE.ZIP "$INGRAM_BACKUP_PATH/PRICE.$CURRENT_DATE.ZIP"
fi

if [ -f $INGRAM_DATA_PATH/PRICE.TXT ];
then
rm $INGRAM_DATA_PATH/PRICE.TXT 
OUT=$?
if [ $OUT -eq 0 ] ; then
   echo "File PRICE.TXT removed."
else
   echo "Error removing PRICE.TXT file" >&2
   exit 1;
fi
fi


echo "Starting file PRICE.ZIP download."
wget --no-verbose ftp://$INGRAM_FTP_LOGIN:$INGRAM_FTP_PASSWORD@ftpsecure.ingrammicro.com/FUSION/US/NB276Y/PRICE.ZIP -O "$INGRAM_DATA_PATH/PRICE.ZIP"
OUT=$?
if [ $OUT -eq 0 ] ; then
   echo "File PRICE.ZIP downloaded."
else
   echo "Error downloading PRICE.ZIP file" >&2
   exit 1;
fi

echo "Extracting PRICE.TXT from  PRICE.ZIP archive."
$UNZIP -qq "$INGRAM_DATA_PATH/PRICE.ZIP" PRICE.TXT -d "$INGRAM_DATA_PATH/"
OUT=$?
if [ $OUT -eq 0 ];then
   echo "File PRICE.TXT extracted."
   echo "File PRICE.TXT have an " `cat "$INGRAM_DATA_PATH/PRICE.TXT" | wc -l` " lines"
else
   echo "Error extracting PRICE.TXT from PRICE.ZIP file" >&2
   exit 1;
fi
fi # if [ $STEP_1 ] 




#### Start Step 2 , put Ingram PRICES.TXT to mySQL table  price ######
cd  $INGRAM_DATA_PATH
if [ $STEP_2 = "1" ] ; then
date
echo "----------Ingram Upload PRICES.TXT into SQL ----------";
#old version: prices.sql

if [ $1 = '--daily' ] ; then
    echo "load_price_temp.sql"
    
else

    echo "running load_price.sql"
    $MYSQL <$INGRAM_SQL/load_price.sql
fi  # daily/weekly


fi # if [ $STEP_2 ] ; then



#### Start Step 3 , download Ingram stock file ######
if [ $STEP_3 = "1" ] ; then
date
echo "----------Ingram Stock Process - download TOTAL.TXT file ----------";
if [ -f $INGRAM_DATA_PATH/TOTAL.ZIP ];
then
CURRENT_DATE=`date +%d%m%y-%H:%M:%S`
echo "Moving '$INGRAM_DATA_PATH/TOTAL.ZIP' to '$INGRAM_BACKUP_PATH/TOTAL.$CURRENT_DATE.ZIP'"
mv $INGRAM_DATA_PATH/TOTAL.ZIP "$INGRAM_BACKUP_PATH/TOTAL.$CURRENT_DATE.ZIP"
fi


if [ -f $INGRAM_DATA_PATH/TOTAL.TXT ];
then
rm $INGRAM_DATA_PATH/TOTAL.TXT 
OUT=$?
if [ $OUT -eq 0 ] ; then
   echo "File TOTAL.TXT removed."
else
   echo "Error removing TOTAL.TXT file" >&2
   exit 1;
fi
fi

echo "Starting file TOTAL.ZIP download."
wget --no-verbose ftp://$INGRAM_FTP_LOGIN:$INGRAM_FTP_PASSWORD@ftpsecure.ingrammicro.com/FUSION/US/AVAIL/TOTAL.ZIP -O "$INGRAM_DATA_PATH/TOTAL.ZIP"
OUT=$?
if [ $OUT -eq 0 ] ; then
   echo "File TOTAL.ZIP downloaded."
else
   echo "Error downloading TOTAL.ZIP file" >&2
   exit 1;
fi

echo "Extracting TOTAL.TXT from  TOTAL.ZIP archive."
$UNZIP -qq "$INGRAM_DATA_PATH/TOTAL.ZIP" TOTAL.TXT -d "$INGRAM_DATA_PATH/"
OUT=$?
if [ $OUT -eq 0 ] ; then
   echo "File TOTAL.TXT extracted."
   echo "File TOTAL.TXT have an " `cat "$INGRAM_DATA_PATH/TOTAL.TXT" | wc -l` " lines"
else
   echo "Error extracting TOTAL.TXT from TOTAL.ZIP file" >&2
   exit 1;
fi
fi # if [ $STEP_3 ] ; then  


#### Start Step 4 , put Ingram stock data to mySQL table  and update the price table ######
if [ $STEP_4 = "1" ] ; then
date
echo "----------Ingram Upload TOTAL.TXT into TOTAL sql file ----------";
echo "running load_stock.sql";
$MYSQL <$INGRAM_SQL/load_stock.sql


fi # if [ $STEP_4 ]

if [ $STEP_5 = "1" ] ; then

STEP_5=1    #   update product information from Ingram download
#### Start Step 5 , update product information from Ingram download ######

date
echo "----------update product information from Ingram download ----------";
echo "running load_update_products_from_price.sql";
$MYSQL <$INGRAM_SQL/update_products_from_price.sql



fi # if [ $STEP_5 ]




echo "------------- THE END ----------------"
date








#############################################
#  End
#############################################
rm -f $pid_file






#mysql -utaras -pdataxp -Dtaras_etilize -hlocalhost<remove_all_categories.sql
#mysql -utaras -pdataxp -Dtaras_etilize -hlocalhost<create_etilize_root_category.sql
#mysql -utaras -pdataxp -Dtaras_etilize -hlocalhost<import_etilize_categories.sql


}

loaddata $1

